Spark Code Change Log File
--------------------------

---------------------------------------------------------------------
Description:
---------------------------------------------------------------------
    In this documentation I explain all the changes I did in the Spark
    core code. I log every change in this file to have an overall
    view of the modifications I have done. Some notifications refer to
    the tests that included inside spark in order to pass the test in
    the compilation stage.

    Log of modifications are of the following form:
    <filename>::<line_number>

---------------------------------------------------------------------
Records of Code:
---------------------------------------------------------------------
    internal/config/package.scala::122
    internal/config/package.scala::135
    MemoryMode.scala::26
    MemoryManager.scala::66
    MemoryManager.scala::67
    MemoryManager.scala::68
    MemoryManager.scala::69
    MemoryManager.scala::86
    MemoryManager.scala::94
    MemoryManager.scala::103
    MemoryManager.scala::111
    MemoryManager.scala::133
    MemoryManager.scala::144
    StorageMemoryPool.scala::41
    ExecutionMemoryPool.scala::51
    StaticMemoryManager.scala::62
    UnifiedMemoryManager.scala::88
    UnifiedMemoryManager.scala::125

    --------------------------------
    (8/10/2018) Monday inserted code
    --------------------------------
    MemoryStore.scala::371 (putIteratorAsBytes -> allocator)
    Platform.java::53
    Platform.java::56
    Platform.java::188
    Platform.java::193
    Platform.java::197
    Platform.java::235
    Platform.java::314
    Platform.java::325-333
    Platform.java::343
    Platform.java::354
    Platform.java::372

    -------------------------------
    (12/10/2018) Friday append file
    -------------------------------
    pom.xml(centralize one ....)::268

    -------------------------------
    (23/10/2018) Tuesday append file
    -------------------------------
    MemoryStore.scala::112
    MemoryStore.scala::375
    MemoryStore.scala::708
    MemoryStore.scala::727
    TestMemoryManager.scala::65 (did that to pass the test)
    
    -------------------------------
    (29/10/2018) Tuesday append file
    -------------------------------
    MemoryAllocator::52
    create new class UnsafeNVMAllocator.java
    common/unsafe/src/main/java/org/apache/spark/unsafe/memory/UnsafeNVMAllocator.java
    MemoryManager::205
    MemoryManager::218
    MemoryManager::229
    MemoryManager::240
    MemoryManager::257
    MemoryManager::267
    MemoryManager::277
    MemoryManager::297
    MemoryManager::337
    MemoryManager::352
    MemoryManager::360
    
    -------------------------------
    (29/10/2018) Monday
    -------------------------------
    UnifiedMemoryManager.scala::69
    UnifiedMemoryManager.scala::69
    BlockManagerMessages.scala::63
    BlockManagerMasterEndpoint.scala::360
    BlockManagerMasterEndpoint.scala::381
    BlockManagerMasterEndpoint.scala::381 
    BlockManagerMasterEndpoint.scala::386 
    BlockManagerMasterEndpoint.scala::388-389 
    BlockManagerMasterEndpoint.scala::502
    SparkListener.scala::99
    StorageUtlis.scala::44 //StorageStatus
    StorageUtlis.scala::58
    StorageUtlis.scala::60
    StorageUtils.scala::68

    -------------------------------
    (31/10/2018) Wednesday
    -------------------------------
    StorageUtils.scala::226 (put code here .... after that try to compile)
    
    StorageLevel.scala::43
    StorageLevel.scala::51
    StorageLevel.scala::54
    StorageLevel.scala::59
    StorageLevel.scala::69
    StorageLevel.scala::75
    StorageLevel.scala::80
    StorageLevel.scala::88
    StorageLevel.scala::108
    StorageLevel.scala::127
    StorageLevel.scala::139
    StorageLevel.scala::143
    StorageLevel.scala::154
    StorageLevel.scala::171-183
    StorageLevel.scala::203
    StorageLevel.scala::216
    StorageLevel.scala::220
    StorageLevel.scala::233
    
    StorageUtils.scala::264-265
    StorageUtils.scala::280-288

    -------------------------------
    (31/10/2018) Wednesday
    -------------------------------
    BlockManager.scala::1328
    BlockManager.scala::1361
    BlockManagerMaster.scala::71
    BlockManagerMaster.scala::75
    BlockManager.scala::502
    BlockManager.scala::249
    BlockManager.scala::341
    BlockManager.scala::157
    BlockManagerMasterEndpoint.scala::388
    StorageLevels.java::26-38
    StorageLevels.java::45
    StorageLevels.java::53
    StorageLevels.java::56
    
    BlockManagerReplicationSuite.scala::169     // pass the test
    BlockManagerReplicationSuite.scala::180-184 // pass the test
    BlockManagerReplicationSuite.scala::192     // pass the test
    BlockManagerReplicationSuite.scala::198     // pass the test
    BlockManagerReplicationSuite.scala::263     // pass the test
    BlockManagerReplicationSuite.scala::382     // pass the test
    BlockManagerReplicationSuite.scala::443     // pass the test
    BlockManagerReplicationSuite.scala::593     // pass the test
    StorageSuite.scala::30                      // pass the test
    StorageSuite.scala::77                      // pass the test
    StorageSuite.scala::255                     // pass the test
    StorageSuite.scala::256                     // pass the test
    StorageSuite.scala::257                     // pass the test
    StorageSuite.scala::339                     // pass the test
    StorageSuite.scala::394                     // pass the test

    ReceivedBlockHandler.scala::149

-------------------------------
(31/03/2019) Sunday
-------------------------------
For the needs of our study to perform a real in-memory experiment we
want to avoid shuffle data spilling to intermediate local directory
(e.g /tmp). In Spark 1.5.2 there was a configuration flag
(spark.shuffle.spill) that could enable and disable shuffle spilling.
After Spark 1.6 and later versions Spark developers delete this option
and the default operation allows the shuffle data spill to local
storage device.

Aggregate.scala:44
Aggregate.scala:76
ExternalSorter.scala:111
ExternalSorter.scala:216
CoGroupedRDD.scala:134

----------------------------------------------------------------------
TODO:
----------------------------------------------------------------------
    -Add some supplements functions to Platform.java
    - Have to change:
        SparkListenerBlockManagerAdded.scala
        (there are some calls of this case class in the json file ....
        hm... might append this ...)
        StorageStatus - StorageUtils.scala
    - What data put in the execution off-heap memory, is that something
    straightforward ?
    - Visualize storage Util
